#!/bin/bash

#! Which project should be charged (NB Wilkes2 projects end in ‘-GPU’):
#SBATCH -A CAINES-SL3-GPU
#SBATCH -p ampere
# SLURM SUBMIT SCRIPT
#SBATCH --job-name=relora-pico-tiny-sn
#SBATCH --open-mode=append
#SBATCH --nodes=1               # This needs to match Fabric(num_nodes=...)
#SBATCH --ntasks-per-node=2     # This needs to match Fabric(devices=...)
#SBATCH --gres=gpu:2            # Request N GPUs per machine
#SBATCH --time=12:00:00
#SBATCH --mail-type=ALL
#! Number of nodes and tasks per node allocated by SLURM (do not change):
numnodes=$SLURM_JOB_NUM_NODES
numtasks=$SLURM_NTASKS
mpi_tasks_per_node=$(echo “$SLURM_TASKS_PER_NODE” | sed -e  ‘s/^\([0-9][0-9]*\).*$/\1/’)
#! Optionally modify the environment seen by the application
#! (note that SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
#! Insert additional module load commands after this line if needed:
#! specifies the unique identifier of the job id
JOBID=$SLURM_JOB_ID
#! Run options for the application:
#! Are you using OpenMP (NB this is unrelated to OpenMPI)? If so increase this
#! safe value to no more than 128:
export OMP_NUM_THREADS=1
#! Number of MPI tasks to be started by the application per node and in total (do not change):
np=$[${numnodes}*${mpi_tasks_per_node}]
#! ############################################################
# Activate conda environment
module purge                               # Removes all modules still loaded
module load rhel8/default-amp              # REQUIRED - loads the basic environment
module load git-lfs-2.3.0-gcc-5.4.0-cbo6khp

workdir="/home/yw580/rds/hpc-work/relora-pico"
cd $workdir

source setup.sh

# Debugging flags (optional)
export NCCL_DEBUG=INFO
export PYTHONFAULTHANDLER=1
# On your cluster you might need this:
export NCCL_SOCKET_IFNAME=^docker0,lo
# only use infiniband
export NCCL_IB_HCA=mlx5
export NCCL_IB_DISABLE=0

application="/home/yw580/.local/bin/poetry"
options="run train --config_path configs/pico-relora-tiny.yaml"
CMD="$application $options"

# Run your training script
# srun $CMD 
timeout 11.95h srun $CMD
if [[ $? == 124 ]]; then
  scontrol requeue $SLURM_JOB_ID
fi
